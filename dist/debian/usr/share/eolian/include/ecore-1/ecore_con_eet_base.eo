class Ecore.Con.Eet.Base (Eo.Base) {
   legacy_prefix: null;
   eo_prefix: ecore_con_eet_base;
   methods {
      @property server {
         [[The server object to which we send and receive.]]
         set {
         }
         get {
         }
         values {
            data: Ecore_Con_Server*;
         }
      }
      @property data_callback {
         [[A callback function which should be called when data is
           received by ecore_con_eet_object.]]
         set {
         }
         values {
            name: const (char) *; [[The name of the eet stream.]]
            func: Ecore_Con_Eet_Data_Cb; [[The callback function.]]
            data: const (void) *; [[The data (if any) that should be
                                    passed to callback function.]]
         }
      }
      @property raw_data_callback {
         [[A callback function which should be calledn when raw data
           is received by ecore_con_eet_object.]]
         set {
         }
         values {
            name: const (char) *; [[The name of the eet stream.]]
            func: Ecore_Con_Eet_Raw_Data_Cb; [[The callback function.]]
            data: const (void) *; [[The data (if any) that should be
                                    passed to callback function.]]
         }
      }
      data_callback_del {
         [[Function to delete the @.data_callback.]]
         params {
            name: const (char) *; [[The name of the eet stream.]]
         }
      }
      raw_data_callback_del {
         [[Function to delete the @.raw_data_callback.]]
         params {
            name: const (char) *; [[The name of the eet stream.]]
         }
      }
      register {
         [[Function to register a \@ref Eet_Data_Descriptor to the
           ecore_con_eet object.]]
         legacy: ecore_con_eet;
         params {
            name: const (char) *; [[The name of the eet stream.]]
            edd: Eet_Data_Descriptor *; [[The Eet_Data_Descriptor that
                                          is to be registered.]]
         }
      }
      send {
         [[Function to send data.]]
         params {
            reply: Ecore_Con_Reply *; [[Contains the ecore_con_eet object
                                        to which the data has to be sent.]]
            name: const (char) *; [[The name of the eet stream.]]
            value: void *; [[Actual data]]
         }
      }
      raw_send {
         [[Function to send raw data.]]
         params {
            reply: Ecore_Con_Reply *; [[Contains the ecore_con_eet object
                                        to which the data has to be sent.]]
            protocol_name: const (char) *; [[The name of the eet stream.]]
            section: const (char) *; [[Name of section in the eet descriptor.]]
            value: void *; [[The value of the section.]]
            length: uint; [[The length of the data that is being sent.]]
         }
      }
   }
   implements {
      Eo.Base.constructor;
      Eo.Base.destructor;
      Eo.Base.finalize;
   }
}
